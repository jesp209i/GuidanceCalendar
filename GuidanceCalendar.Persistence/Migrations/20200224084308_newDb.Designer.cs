// <auto-generated />
using System;
using GuidanceCalendar.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GuidanceCalendar.Persistence.Migrations
{
    [DbContext(typeof(GuidanceCalendarContext))]
    [Migration("20200224084308_newDb")]
    partial class newDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GuidanceCalendar.Persistence.DAO.BookingDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("EndTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TimeslotDaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("TimeslotDaoId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("GuidanceCalendar.Persistence.DAO.CalendarDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TeacherDaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TeacherDaoId");

                    b.ToTable("Calendar");
                });

            modelBuilder.Entity("GuidanceCalendar.Persistence.DAO.StudentDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("GuidanceCalendar.Persistence.DAO.TeacherDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("EndTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("GuidanceCalendar.Persistence.DAO.TimeslotDao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CalendarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CalendarId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Timeslot");
                });

            modelBuilder.Entity("GuidanceCalendar.Persistence.DAO.BookingDao", b =>
                {
                    b.HasOne("GuidanceCalendar.Persistence.DAO.StudentDao", "BookedBy")
                        .WithMany("Bookings")
                        .HasForeignKey("StudentId");

                    b.HasOne("GuidanceCalendar.Persistence.DAO.TimeslotDao", null)
                        .WithMany("Bookings")
                        .HasForeignKey("TimeslotDaoId");
                });

            modelBuilder.Entity("GuidanceCalendar.Persistence.DAO.CalendarDao", b =>
                {
                    b.HasOne("GuidanceCalendar.Persistence.DAO.TeacherDao", null)
                        .WithMany("Calendars")
                        .HasForeignKey("TeacherDaoId");
                });

            modelBuilder.Entity("GuidanceCalendar.Persistence.DAO.TimeslotDao", b =>
                {
                    b.HasOne("GuidanceCalendar.Persistence.DAO.CalendarDao", "Calendar")
                        .WithMany("AvailableTimeslots")
                        .HasForeignKey("CalendarId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GuidanceCalendar.Persistence.DAO.TeacherDao", "TimeslotOwner")
                        .WithMany("AvailableTimeslots")
                        .HasForeignKey("TeacherId");
                });
#pragma warning restore 612, 618
        }
    }
}
